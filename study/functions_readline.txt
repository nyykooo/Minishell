Quando você compilar um programa que usa a GNU Readline Library, é necessário vincular a biblioteca ao seu programa. Isso geralmente é feito adicionando -lreadline ao comando de compilação.

1 - readline

#include <readline/readline.h>
#include <readline/history.h>

char *readline(const char *prompt);

Usada para ler uma linha de entrada do usuário.

-- const char *prompt: Esta é a mensagem de prompt que será exibida ao usuário antes de solicitar a entrada. Ela pode ser uma string estática ou dinâmica.

Retorno: string contendo a linha de entrada digitada pelo usuário.

-------------------------------------------------------------------------------

2 - add_history

#include <readline/history.h>

void add_history(const char *line);

Usada para adicionar uma linha ao histórico de comandos. Isso permite que os usuários recuperem facilmente comandos anteriores usando as teclas de seta para cima e para baixo, por exemplo, para navegar pelo histórico de comandos.

-- const char *line: É a string que você deseja adicionar ao histórico de comandos.

(Sem retorno)

-------------------------------------------------------------------------------

3 - rl_clear_history

#include <readline/history.h>

void rl_clear_history(void);

Usada para limpar o histórico de comandos. Esta função remove todos os itens do histórico, ou seja, todas as linhas de entrada que foram lidas e armazenadas no histórico durante a sessão atual de execução do programa.

(Sem argumentos e retorno)

-------------------------------------------------------------------------------

4 - l_on_new_line

#include <readline/readline.h>

void rl_on_new_line(void);

Usada para informar à biblioteca que o cursor de entrada deve ser movido para a próxima linha quando o usuário pressionar Enter. Isso é útil quando você deseja fazer alguma manipulação antes de exibir o próximo prompt, como no caso de um prompt multi-linha.

(Sem argumentos e retorno)

-------------------------------------------------------------------------------

5 - rl_replace_line

#include <readline/readline.h>

void rl_replace_line(const char *text, int clear_undo);

Usada para substituir a linha de entrada atual na tela por uma nova linha especificada. Isso é útil quando você deseja modificar a linha de entrada antes de exibi-la novamente na tela.

-- const char *text: É a nova linha de texto que você deseja exibir na tela.
-- int clear_undo: Se for diferente de zero, limpa o histórico de desfazer (undo history) para esta linha.

-------------------------------------------------------------------------------

6 - rl_redisplay

#include <readline/history.h>

void rl_redisplay(void);

Usada para dar redisplay da linha de entrada atual na tela. Ela é útil quando você precisa forçar a atualização da linha de entrada, por exemplo, após uma modificação feita programaticamente.

(Sem argumentos e retorno)